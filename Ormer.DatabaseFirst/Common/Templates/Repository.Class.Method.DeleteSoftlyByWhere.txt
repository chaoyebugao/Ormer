/// <summary>
/// Delete specific records by where clause
/// </summary>
/// <param name="sqlWhere">Where clause e.g., "Code = @Code"</param>
/// <param name="whereDps">Parameters for the sqlWhere clause</param>
/// <returns>
/// The count of records that effected
/// </returns>
public int DeleteSoftlyByWhere(string sqlWhere, object whereDps)
{
    using (var conn = GetWritableConnection())
    {
        var sql = $@"Update <t:repository.table> SET <t:repository.deleteColumn> = 1 WHERE {sqlWhere}";
        var dps = new DynamicParameters(whereDps);
        return this.Execute(sql, dps);
    }
}

/// <summary>
/// Delete specific records by where clause, asynchronously
/// </summary>
/// <param name="sqlWhere">Where clause e.g., "Code = @Code"</param>
/// <param name="whereDps">Parameters for the sqlWhere clause</param>
/// <returns>
/// The count of records that effected, asynchronous
/// </returns>
public Task<int> DeleteSoftlyByWhereAsync(string sqlWhere, object whereDps)
{
    using (var conn = GetWritableConnection())
    {
        var sql = $@"Update <t:repository.table> SET <t:repository.deleteColumn> = 1 WHERE {sqlWhere}";
        var dps = new DynamicParameters(whereDps);
        return this.ExecuteAsync(sql, dps);
    }
}
